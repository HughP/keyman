c ewe10.kmn
c 
c Éwé (Ghana) 1.0
c 
c Unicode keyboard layout designed for Éwé.
c 
c © State Library of Victoria and Gilbert Adjoyi 2009
c 
c This keyboard package requires a commercial program Keyman Desktop.
c Which is available from http://www.tavultesoft.com/
c 
c This keyboard package is free software: you can redistribute it and/or modify
c it under the terms of the GNU General Public License as published by
c the Free Software Foundation, version 3 of the License.
c 
c This program is distributed in the hope that it will be useful,
c but WITHOUT ANY WARRANTY; without even the implied warranty of
c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
c GNU General Public License for more details.
c 
c You should have received a copy of the GNU General Public License
c along with this program.  If not, see <http://www.gnu.org/licenses/>.
c 
c Keyboard documentation is licensed under the Creative Commons
c Attribution-Non-Commercial-Share Alike 2.5 Australia License.
c To view a copy of this licence, visit
c http://creativecommons.org/licenses/by-nc-sa/2.5/au/ or send a letter to
c Creative Commons, 171 Second Street, Suite 300,
c San Francisco, California 94105, USA.
c 
c This keyboard source file was developed by Vicnet,
c a division of the State Library of Victoria as part of
c the Open Road project’s Language enablement initiative.
c 
c 
c Andrew Cunningham    2009-11-23
c support AT openroad.net.au
c lang.support AT gmail.com

store(&VERSION) '7.0'
store(&NAME) 'Éwé'
store(&COPYRIGHT) '© 2009 State Library of Victoria and Gilbert Adjoyi'
store(&MESSAGE) 'Unicode keyboard for Ewe (Ghana)'
store(&ETHNOLOGUECODE) 'ewe'
store(&BITMAP) 'ewe.ico'
store(&VISUALKEYBOARD) 'ewe.kvk'
begin Unicode > use(constraints)

store(basicVowels) "aAeEiIoOuU"
store(extVowels) U+025b U+0190 U+0254 U+0186
store(acuteChars) U+00e1 U+00c1 U+00e9 U+00c9 U+00ed U+00cd U+00f3 U+00d3 U+00fa U+00da
store(graveChars) U+00e0 U+00c0 U+00e8 U+00c8 U+00ec U+00cc U+00f2 U+00d2 U+00f9 U+00d9  
store(tildeChars) U+00e3 U+00c3 U+1ebd U+1ebc U+0129 U+0128 U+00f5 U+00d5 U+0169 U+0168
store(allVowels) outs(basicVowels) outs(extVowels) 
store(graveKeys) [K_BKQUOTE]     
store(acuteKeys) [K_BKSLASH]
store(tildeKeys) [SHIFT K_BKQUOTE]
store(diacriticKeys) outs(graveKeys) outs(acuteKeys) outs(tildeKeys) 
store(diacriticChars) U+0300 U+0301 U+0303
store(extLatinKeys) [SHIFT K_4] [RALT K_4] [SHIFT RALT K_4] \
                    [RALT K_D] [SHIFT RALT K_D] [RALT K_E] [SHIFT RALT K_E] \
                    [RALT K_F] [SHIFT RALT K_F] [RALT K_X] [SHIFT RALT K_X] [RALT K_C] \
                    [SHIFT RALT K_C] [RALT K_V] [SHIFT RALT K_V] [RALT K_J] [SHIFT RALT K_J]
store(extLatinChars) U+20b5 U+0024 U+00a3 \  
                     U+0256 U+0189 U+025b U+0190 \  
                     U+0192 U+0191 U+0263 U+0194 U+0254 \  
                     U+0186 U+028b U+01b2 U+014b U+014a

group(constraints) using keys 
notany(allVowels) + any(diacriticKeys) > context nul 
+ any(extLatinKeys) > use(main)  
+ any(diacriticKeys) > use(main)
nomatch > use(main)

group(main) using keys 
c extended Latin
+ any(extLatinKeys) > index(extLatinChars,1)

c vowels
any(basicVowels) + any(graveKeys) > index(graveChars,1)   
any(basicVowels) + any(acuteKeys) > index(acuteChars,1)
any(basicVowels) + any(tildeKeys) > index(tildeChars,1) 
any(extVowels) + any(diacriticKeys) > context index(diacriticChars,2)  

c EOF
